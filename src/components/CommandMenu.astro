---
import "hotkeypad/reset.css";
import "hotkeypad/index.css";
import { type SocialIcon } from "@/types";
import FOOTER from "@/icons/FOOTER.astro";
const { lang, profiles } = Astro.props;

const SOCIAL_ICONS: SocialIcon = {
  GitHub: `<svg
  width="16"
  height="16"
  viewBox="0 0 24 24"
  xmlns="http://www.w3.org/2000/svg"
  style="margin-right: 8px"
  ><path
    fill="currentColor"
    d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"
  ></path></svg
>`,
  LinkedIn: `<svg
  height="16"
  width="16"
  viewBox="0 0 24 24"
  xmlns="http://www.w3.org/2000/svg"
  style="margin-right: 8px"
  ><title>LinkedIn</title><path
    fill="currentColor"
    d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"
  ></path></svg
  >`,
};

// Genera una lista de todas las opciones del perfil
const profilesInfo = profiles.map(({ network, url }) => {
  const icon = SOCIAL_ICONS[network];
  const firstLetter = network[0].toUpperCase();

  return {
    id: network,
    section: "Social",
    title: `${lang == "es" ? "Visitar" : "Visit"} ${network}`,
    url,
    icon,
    hotkey: `ctrl+${firstLetter}`,
  };
});

// RELACIONADO A HOTKEYPAD
---

<footer id="normal-footer" class="no-print">
  {lang == "es" ? "Presiona" : "Press"}
  <kbd>Ctrl k</kbd>
  {lang == "es" ? "para abrir el menu de comandos" : "to open the command menu"}

  <!-- Presiona <kbd>Ctrl k </kbd> para abrir el menu de comandos. -->
</footer>

<div id="footer-button" class="no-print">
  <FOOTER />
</div>

<div>
  <div
    id="hotkeypad"
    translate={lang == "en" ? "yes" : "no"}
    data-placeholder={lang == "en" ? "Search" : "Buscar"}
    data-info={JSON.stringify(profilesInfo)}
  >
  </div>

  <script>
    interface Info {
      id: string;
      section: string;
      title: string;
      url: string;
      icon: string;
      hotkey: string;
      handler?: () => void;
    }

    import HotKeyPad from "HotKeyPad";

    const hotkeypad = new HotKeyPad();
    const info = hotkeypad.instance.getAttribute("data-info") ?? "[]";
    const parsedInfo = JSON.parse(info) as Info[];
    const translate = hotkeypad.instance.getAttribute("translate");
    const titlePrint = translate === "yes" ? "Print" : "Imprimir";
    const titleSection = translate === "yes" ? "Actions" : "Acciones";
    const titleLanguage = translate === "yes" ? "Language" : "Idioma";

    // Lista de opciones permitidas
    const options = parsedInfo.map(
      ({ url, hotkey, icon, id, section, title }) => {
        return {
          id,
          title,
          icon,
          hotkey,
          section,
          handler: () => {
            window.open(url, "_blank");
          },
        };
      }
    );
    // Opcion de imprimir
    hotkeypad.setCommands([
      {
        id: "print",
        title: titlePrint,
        icon: `<svg style="margin-right: 8px" width="16" height="16" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" d="M6.72 13.829c-.24.03-.48.062-.72.096m.72-.096a42.415 42.415 0 0 1 10.56 0m-10.56 0L6.34 18m10.94-4.171c.24.03.48.062.72.096m-.72-.096L17.66 18m0 0 .229 2.523a1.125 1.125 0 0 1-1.12 1.227H7.231c-.662 0-1.18-.568-1.12-1.227L6.34 18m11.318 0h1.091A2.25 2.25 0 0 0 21 15.75V9.456c0-1.081-.768-2.015-1.837-2.175a48.055 48.055 0 0 0-1.913-.247M6.34 18H5.25A2.25 2.25 0 0 1 3 15.75V9.456c0-1.081.768-2.015 1.837-2.175a48.041 48.041 0 0 1 1.913-.247m10.5 0a48.536 48.536 0 0 0-10.5 0m10.5 0V3.375c0-.621-.504-1.125-1.125-1.125h-8.25c-.621 0-1.125.504-1.125 1.125v3.659M18 10.5h.008v.008H18V10.5Zm-3 0h.008v.008H15V10.5Z" />
        </svg>`,
        hotkey: "ctrl+P",
        section: titleSection,
        handler: () => {
          window.print();
        },
      },
      {
        id: titleLanguage,
        title: titleLanguage,
        icon: `<svg style="margin-right: 8px" width="16" height="16" xmlns="http://www.w3.org/2000/svg"  viewBox="0 0 512 512"><path fill="#4b5563" d="M352 256c0 22.2-1.2 43.6-3.3 64H163.3c-2.2-20.4-3.3-41.8-3.3-64s1.2-43.6 3.3-64H348.7c2.2 20.4 3.3 41.8 3.3 64zm28.8-64H503.9c5.3 20.5 8.1 41.9 8.1 64s-2.8 43.5-8.1 64H380.8c2.1-20.6 3.2-42 3.2-64s-1.1-43.4-3.2-64zm112.6-32H376.7c-10-63.9-29.8-117.4-55.3-151.6c78.3 20.7 142 77.5 171.9 151.6zm-149.1 0H167.7c6.1-36.4 15.5-68.6 27-94.7c10.5-23.6 22.2-40.7 33.5-51.5C239.4 3.2 248.7 0 256 0s16.6 3.2 27.8 13.8c11.3 10.8 23 27.9 33.5 51.5c11.6 26 20.9 58.2 27 94.7zm-209 0H18.6C48.6 85.9 112.2 29.1 190.6 8.4C165.1 42.6 145.3 96.1 135.3 160zM8.1 192H131.2c-2.1 20.6-3.2 42-3.2 64s1.1 43.4 3.2 64H8.1C2.8 299.5 0 278.1 0 256s2.8-43.5 8.1-64zM194.7 446.6c-11.6-26-20.9-58.2-27-94.6H344.3c-6.1 36.4-15.5 68.6-27 94.6c-10.5 23.6-22.2 40.7-33.5 51.5C272.6 508.8 263.3 512 256 512s-16.6-3.2-27.8-13.8c-11.3-10.8-23-27.9-33.5-51.5zM135.3 352c10 63.9 29.8 117.4 55.3 151.6C112.2 482.9 48.6 426.1 18.6 352H135.3zm358.1 0c-30 74.1-93.6 130.9-171.9 151.6c25.5-34.2 45.2-87.7 55.3-151.6H493.4z"/>
        </svg>`,
        hotkey: "ctrl+J",
        section: titleSection,
        handler: () => {
          const currentPath = window.location.pathname;
          if (currentPath.startsWith("/en")) {
            window.location.pathname = currentPath.replace("/en", "");
          } else {
            window.location.pathname = "/en";
          }
        },
      },
      // Demas opciones
      ...options,
    ]);

    // En caso de pantalla pequenÌƒa, mostrar el boton de footer
    const footerButton = document.getElementById("footer-button");

    footerButton?.addEventListener("click", () => {
      var event = new KeyboardEvent("keydown", {
        key: "K",
        code: "KeyK",
        keyCode: 75,
        which: 75,
        ctrlKey: true,
        altKey: false,
        shiftKey: false,
        metaKey: false,
      });

      document.dispatchEvent(event);
    });
  </script>

  <style>
    @keyframes fadeIn {
      from {
        opacity: 0;
      }
      to {
        opacity: 1;
      }
    }

    @media (min-width: 601px) {
      #normal-footer {
        display: block;
      }

      #footer-button {
        display: none;
      }
    }

    @media (max-width: 600px) {
      #normal-footer {
        display: none;
      }

      #footer-button {
        background: #fff;
        position: fixed;
        border: 1px solid #eee;
        right: 10px;
        bottom: 10px;
        width: 50px;
        height: 50px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
      }
    }

    footer {
      background: #fdfdfd;
      border-top: 1px solid #eee;
      position: fixed;
      bottom: 0px;
      width: 100%;
      padding-block: 8px;
      text-align: center;
      font-size: 0.85rem;

      view-timeline-name: --revealing;
      view-timeline-axis: block;

      animation: linear 0.1s fadeIn;
    }

    kbd {
      background: #eee;
      border-radius: 4px;
      padding: 2px 4px;
      font-size: 12px;
    }
  </style>
</div>
